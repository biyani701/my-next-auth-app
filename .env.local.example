AUTH_SECRET= # `npx auth secret` or `openssl rand -hex 32`

# Authentication providers
AUTH_AUTH0_ID=
AUTH_AUTH0_SECRET=
AUTH_AUTH0_ISSUER=

AUTH_FACEBOOK_ID=
AUTH_FACEBOOK_SECRET=

AUTH_GITHUB_ID=
AUTH_GITHUB_SECRET=

AUTH_GOOGLE_ID=
AUTH_GOOGLE_SECRET=

AUTH_TWITTER_ID=
AUTH_TWITTER_SECRET=

# CORS configuration
ALLOWED_ORIGINS=http://localhost:3775,https://vishal.biyani.xyz
AUTH_URL=https://my-next-auth-app-ten.vercel.app

# Storage configuration
# Uncomment these if you want to use Vercel KV
# AUTH_KV_REST_API_URL=your-vercel-kv-url
# AUTH_KV_REST_API_TOKEN=your-vercel-kv-token

# Database configuration (PostgreSQL)
# DATABASE_URL=postgres://username:password@host:port/database?sslmode=require

# Prisma automatically handles connection pooling
# See: https://www.prisma.io/docs/concepts/components/prisma-client/working-with-prismaclient/connection-management

# Session configuration
# SESSION_STRATEGY=jwt # Options: jwt, database

# Data retention configuration (in days)
# SESSION_RETENTION_DAYS=30
# ACCOUNT_RETENTION_DAYS=365
# VERIFICATION_TOKEN_RETENTION_DAYS=7

# Debug mode
AUTH_DEBUG=true

# THIRD_PARTY_API_EXAMPLE_BACKEND= # Read more at https://authjs.dev/guides/integrating-third-party-backends

# Auth.js configuration
AUTH_TRUST_HOST=1 # Read more at https://authjs.dev/getting-started/deployment#auth_trust_host